name: Deploy AWS com Terraform

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Definir variáveis de ambiente
        run: |
          echo "TF_VAR_redis_host=redis-17111.c276.us-east-1-2.ec2.redns.redis-cloud.com" >> $GITHUB_ENV
          echo "TF_VAR_redis_user=${{ secrets.REDIS_USER }}" >> $GITHUB_ENV
          echo "TF_VAR_redis_password=${{ secrets.REDIS_PASSWORD }}" >> $GITHUB_ENV
          echo "TF_VAR_redis_port=17111" >> $GITHUB_ENV
          echo "TF_VAR_dynamodb_table_name=relatorios" >> $GITHUB_ENV

      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Buildar Lambda: RequestHandler
        run: |
          # Go to the project directory
          cd src/RequestHandler
          # Publish the project to a 'publish' folder
          dotnet publish -c Release -o publish
          # Go into the publish folder
          cd publish
          # Zip the contents of the publish folder, placing the zip at the repository root
          zip -r ../../../../lambda.zip .
          # Go back to the repository root
          cd ../../../../

      - name: Buildar Lambda: ReportProcessor
        run: |
          # Go to the project directory
          cd src/ReportProcessor
          # Publish the project to a 'publish' folder
          dotnet publish -c Release -o publish
          # Go into the publish folder
          cd publish
          # Zip the contents of the publish folder, placing the zip at the repository root
          zip -r ../../../../report_processor.zip .
          # Go back to the repository root
          cd ../../../../

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve